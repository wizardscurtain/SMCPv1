[tool:pytest]
# Pytest configuration for SMCP v1 test suite

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output configuration
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --cov=smcp_security
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=90
    --junit-xml=test-results.xml
    --durations=10

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    security: Security-focused tests for attack prevention
    performance: Performance and benchmark tests
    slow: Tests that take more than 1 second
    network: Tests requiring network access
    crypto: Cryptographic operation tests
    auth: Authentication and authorization tests
    validation: Input validation tests
    ratelimit: Rate limiting tests
    audit: Audit and logging tests
    ai: AI immune system tests
    e2e: End-to-end workflow tests
    regression: Regression tests for known issues
    smoke: Basic functionality smoke tests

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::UserWarning

# Minimum Python version
minversion = 3.11

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# addopts = -n auto  # Uncomment for parallel execution with pytest-xdist

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Asyncio configuration
asyncio_mode = auto
